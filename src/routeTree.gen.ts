/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as CalendarRouteImport } from './routes/calendar'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as CommunitiesIndexRouteImport } from './routes/communities/index'
import { Route as EventsSubmitRouteImport } from './routes/events/submit'
import { Route as EventsEventIdRouteImport } from './routes/events/$eventId'
import { Route as authSignupRouteRouteImport } from './routes/(auth)/signup/route'
import { Route as authSigninRouteRouteImport } from './routes/(auth)/signin/route'
import { Route as CommunitiesManagementIndexRouteImport } from './routes/communities/management/index'
import { Route as AuthenticatedLayoutIndexRouteImport } from './routes/_authenticated/_layout/index'
import { Route as CommunitiesManagementCreateRouteImport } from './routes/communities/management/create'
import { Route as CommunitiesManagementCommunityIdRouteImport } from './routes/communities/management/$communityId'

// Create/Update Routes

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const CalendarRoute = CalendarRouteImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const CommunitiesIndexRoute = CommunitiesIndexRouteImport.update({
  id: '/communities/',
  path: '/communities/',
  getParentRoute: () => rootRoute,
} as any)

const EventsSubmitRoute = EventsSubmitRouteImport.update({
  id: '/events/submit',
  path: '/events/submit',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventIdRoute = EventsEventIdRouteImport.update({
  id: '/events/$eventId',
  path: '/events/$eventId',
  getParentRoute: () => rootRoute,
} as any)

const authSignupRouteRoute = authSignupRouteRouteImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const authSigninRouteRoute = authSigninRouteRouteImport.update({
  id: '/(auth)/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const CommunitiesManagementIndexRoute =
  CommunitiesManagementIndexRouteImport.update({
    id: '/communities/management/',
    path: '/communities/management/',
    getParentRoute: () => rootRoute,
  } as any)

const AuthenticatedLayoutIndexRoute =
  AuthenticatedLayoutIndexRouteImport.update({
    id: '/_layout/',
    path: '/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const CommunitiesManagementCreateRoute =
  CommunitiesManagementCreateRouteImport.update({
    id: '/communities/management/create',
    path: '/communities/management/create',
    getParentRoute: () => rootRoute,
  } as any)

const CommunitiesManagementCommunityIdRoute =
  CommunitiesManagementCommunityIdRouteImport.update({
    id: '/communities/management/$communityId',
    path: '/communities/management/$communityId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarRouteImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninRouteRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupRouteRouteImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventId': {
      id: '/events/$eventId'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof EventsEventIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/events/submit': {
      id: '/events/submit'
      path: '/events/submit'
      fullPath: '/events/submit'
      preLoaderRoute: typeof EventsSubmitRouteImport
      parentRoute: typeof rootRoute
    }
    '/communities/': {
      id: '/communities/'
      path: '/communities'
      fullPath: '/communities'
      preLoaderRoute: typeof CommunitiesIndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/communities/management/$communityId': {
      id: '/communities/management/$communityId'
      path: '/communities/management/$communityId'
      fullPath: '/communities/management/$communityId'
      preLoaderRoute: typeof CommunitiesManagementCommunityIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/communities/management/create': {
      id: '/communities/management/create'
      path: '/communities/management/create'
      fullPath: '/communities/management/create'
      preLoaderRoute: typeof CommunitiesManagementCreateRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_layout/': {
      id: '/_authenticated/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedLayoutIndexRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/communities/management/': {
      id: '/communities/management/'
      path: '/communities/management'
      fullPath: '/communities/management'
      preLoaderRoute: typeof CommunitiesManagementIndexRouteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './routes/_authenticated' {
  const createFileRoute: CreateFileRoute<
    '/_authenticated',
    FileRoutesByPath['/_authenticated']['parentRoute'],
    FileRoutesByPath['/_authenticated']['id'],
    FileRoutesByPath['/_authenticated']['path'],
    FileRoutesByPath['/_authenticated']['fullPath']
  >
}
declare module './routes/calendar' {
  const createFileRoute: CreateFileRoute<
    '/calendar',
    FileRoutesByPath['/calendar']['parentRoute'],
    FileRoutesByPath['/calendar']['id'],
    FileRoutesByPath['/calendar']['path'],
    FileRoutesByPath['/calendar']['fullPath']
  >
}
declare module './routes/profile' {
  const createFileRoute: CreateFileRoute<
    '/profile',
    FileRoutesByPath['/profile']['parentRoute'],
    FileRoutesByPath['/profile']['id'],
    FileRoutesByPath['/profile']['path'],
    FileRoutesByPath['/profile']['fullPath']
  >
}
declare module './routes/(auth)/signin/route' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/signin',
    FileRoutesByPath['/(auth)/signin']['parentRoute'],
    FileRoutesByPath['/(auth)/signin']['id'],
    FileRoutesByPath['/(auth)/signin']['path'],
    FileRoutesByPath['/(auth)/signin']['fullPath']
  >
}
declare module './routes/(auth)/signup/route' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/signup',
    FileRoutesByPath['/(auth)/signup']['parentRoute'],
    FileRoutesByPath['/(auth)/signup']['id'],
    FileRoutesByPath['/(auth)/signup']['path'],
    FileRoutesByPath['/(auth)/signup']['fullPath']
  >
}
declare module './routes/events/$eventId' {
  const createFileRoute: CreateFileRoute<
    '/events/$eventId',
    FileRoutesByPath['/events/$eventId']['parentRoute'],
    FileRoutesByPath['/events/$eventId']['id'],
    FileRoutesByPath['/events/$eventId']['path'],
    FileRoutesByPath['/events/$eventId']['fullPath']
  >
}
declare module './routes/events/submit' {
  const createFileRoute: CreateFileRoute<
    '/events/submit',
    FileRoutesByPath['/events/submit']['parentRoute'],
    FileRoutesByPath['/events/submit']['id'],
    FileRoutesByPath['/events/submit']['path'],
    FileRoutesByPath['/events/submit']['fullPath']
  >
}
declare module './routes/communities/index' {
  const createFileRoute: CreateFileRoute<
    '/communities/',
    FileRoutesByPath['/communities/']['parentRoute'],
    FileRoutesByPath['/communities/']['id'],
    FileRoutesByPath['/communities/']['path'],
    FileRoutesByPath['/communities/']['fullPath']
  >
}
declare module './routes/communities/management/$communityId' {
  const createFileRoute: CreateFileRoute<
    '/communities/management/$communityId',
    FileRoutesByPath['/communities/management/$communityId']['parentRoute'],
    FileRoutesByPath['/communities/management/$communityId']['id'],
    FileRoutesByPath['/communities/management/$communityId']['path'],
    FileRoutesByPath['/communities/management/$communityId']['fullPath']
  >
}
declare module './routes/communities/management/create' {
  const createFileRoute: CreateFileRoute<
    '/communities/management/create',
    FileRoutesByPath['/communities/management/create']['parentRoute'],
    FileRoutesByPath['/communities/management/create']['id'],
    FileRoutesByPath['/communities/management/create']['path'],
    FileRoutesByPath['/communities/management/create']['fullPath']
  >
}
declare module './routes/_authenticated/_layout/index' {
  const createFileRoute: CreateFileRoute<
    '/_authenticated/_layout/',
    FileRoutesByPath['/_authenticated/_layout/']['parentRoute'],
    FileRoutesByPath['/_authenticated/_layout/']['id'],
    FileRoutesByPath['/_authenticated/_layout/']['path'],
    FileRoutesByPath['/_authenticated/_layout/']['fullPath']
  >
}
declare module './routes/communities/management/index' {
  const createFileRoute: CreateFileRoute<
    '/communities/management/',
    FileRoutesByPath['/communities/management/']['parentRoute'],
    FileRoutesByPath['/communities/management/']['id'],
    FileRoutesByPath['/communities/management/']['path'],
    FileRoutesByPath['/communities/management/']['fullPath']
  >
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedLayoutIndexRoute: typeof AuthenticatedLayoutIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedLayoutIndexRoute: AuthenticatedLayoutIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/calendar': typeof CalendarRoute
  '/profile': typeof ProfileRoute
  '/signin': typeof authSigninRouteRoute
  '/signup': typeof authSignupRouteRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events/submit': typeof EventsSubmitRoute
  '/communities': typeof CommunitiesIndexRoute
  '/communities/management/$communityId': typeof CommunitiesManagementCommunityIdRoute
  '/communities/management/create': typeof CommunitiesManagementCreateRoute
  '/': typeof AuthenticatedLayoutIndexRoute
  '/communities/management': typeof CommunitiesManagementIndexRoute
}

export interface FileRoutesByTo {
  '/calendar': typeof CalendarRoute
  '/profile': typeof ProfileRoute
  '/signin': typeof authSigninRouteRoute
  '/signup': typeof authSignupRouteRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events/submit': typeof EventsSubmitRoute
  '/communities': typeof CommunitiesIndexRoute
  '/communities/management/$communityId': typeof CommunitiesManagementCommunityIdRoute
  '/communities/management/create': typeof CommunitiesManagementCreateRoute
  '/': typeof AuthenticatedLayoutIndexRoute
  '/communities/management': typeof CommunitiesManagementIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/calendar': typeof CalendarRoute
  '/profile': typeof ProfileRoute
  '/(auth)/signin': typeof authSigninRouteRoute
  '/(auth)/signup': typeof authSignupRouteRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events/submit': typeof EventsSubmitRoute
  '/communities/': typeof CommunitiesIndexRoute
  '/communities/management/$communityId': typeof CommunitiesManagementCommunityIdRoute
  '/communities/management/create': typeof CommunitiesManagementCreateRoute
  '/_authenticated/_layout/': typeof AuthenticatedLayoutIndexRoute
  '/communities/management/': typeof CommunitiesManagementIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/calendar'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/events/$eventId'
    | '/events/submit'
    | '/communities'
    | '/communities/management/$communityId'
    | '/communities/management/create'
    | '/'
    | '/communities/management'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/calendar'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/events/$eventId'
    | '/events/submit'
    | '/communities'
    | '/communities/management/$communityId'
    | '/communities/management/create'
    | '/'
    | '/communities/management'
  id:
    | '__root__'
    | '/_authenticated'
    | '/calendar'
    | '/profile'
    | '/(auth)/signin'
    | '/(auth)/signup'
    | '/events/$eventId'
    | '/events/submit'
    | '/communities/'
    | '/communities/management/$communityId'
    | '/communities/management/create'
    | '/_authenticated/_layout/'
    | '/communities/management/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  CalendarRoute: typeof CalendarRoute
  ProfileRoute: typeof ProfileRoute
  authSigninRouteRoute: typeof authSigninRouteRoute
  authSignupRouteRoute: typeof authSignupRouteRoute
  EventsEventIdRoute: typeof EventsEventIdRoute
  EventsSubmitRoute: typeof EventsSubmitRoute
  CommunitiesIndexRoute: typeof CommunitiesIndexRoute
  CommunitiesManagementCommunityIdRoute: typeof CommunitiesManagementCommunityIdRoute
  CommunitiesManagementCreateRoute: typeof CommunitiesManagementCreateRoute
  CommunitiesManagementIndexRoute: typeof CommunitiesManagementIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  CalendarRoute: CalendarRoute,
  ProfileRoute: ProfileRoute,
  authSigninRouteRoute: authSigninRouteRoute,
  authSignupRouteRoute: authSignupRouteRoute,
  EventsEventIdRoute: EventsEventIdRoute,
  EventsSubmitRoute: EventsSubmitRoute,
  CommunitiesIndexRoute: CommunitiesIndexRoute,
  CommunitiesManagementCommunityIdRoute: CommunitiesManagementCommunityIdRoute,
  CommunitiesManagementCreateRoute: CommunitiesManagementCreateRoute,
  CommunitiesManagementIndexRoute: CommunitiesManagementIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/calendar",
        "/profile",
        "/(auth)/signin",
        "/(auth)/signup",
        "/events/$eventId",
        "/events/submit",
        "/communities/",
        "/communities/management/$communityId",
        "/communities/management/create",
        "/communities/management/"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_layout/"
      ]
    },
    "/calendar": {
      "filePath": "calendar.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/(auth)/signin": {
      "filePath": "(auth)/signin/route.tsx"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup/route.tsx"
    },
    "/events/$eventId": {
      "filePath": "events/$eventId.tsx"
    },
    "/events/submit": {
      "filePath": "events/submit.tsx"
    },
    "/communities/": {
      "filePath": "communities/index.tsx"
    },
    "/communities/management/$communityId": {
      "filePath": "communities/management/$communityId.tsx"
    },
    "/communities/management/create": {
      "filePath": "communities/management/create.tsx"
    },
    "/_authenticated/_layout/": {
      "filePath": "_authenticated/_layout/index.tsx",
      "parent": "/_authenticated"
    },
    "/communities/management/": {
      "filePath": "communities/management/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
